#상속 

class B1{
	public int x =500;
	public int y = 1000;
}
class B2 extends B1{
	public String x ="처음 시작하는 자바";
}
public class InhTest1 {

	public static void main(String[] args) {
		B2 b2 = new B2();
		System.out.println("객체 b2에 들어있는 x,y값: "+b2.x+b2.y);
		B1 b1 = new B1();
		System.out.println("객체 b2에 들어있는 x,y값: "+b1.x+b1.y);
		//연산자 우선순위때문에 문자열과 결합 5001000

	}

}


#도형그리기(상속)
class Shape{
	String color="black";
	void draw(){
		System.out.printf("[color=%s]\n",color);
	}
}

class Point{
	int x;
	int y;
	
	Point(int x, int y){
		this.x=x;
		this.y=y;
	}
	Point(){
		this(0,0);
	}
	
	String getXY(){
		return "("+x+","+y+")";
	}
}

class Circle extends Shape{
	Point center;
	int r;
	
	Circle(){
		this(new Point(0,0),100);
	}
	Circle(Point center,int r){
		this.center=center;
		this.r=r;
	}
	void draw(){
		System.out.printf("[center =(%d, %d),r=%d, color=%s\n", center.x, center.y,r,color);
	}
}

class Triangle extends Shape{
	Point p[]=new Point[3];
	
	Triangle(Point[] p){
		this.p=p;
	}
	void draw(){
		System.out.printf("[p1=%s, p2=%s, p3=%s, color=%s\n", p[0].getXY(),p[1].getXY(),p[2].getXY(), color);
	}
}
public class DrawShape {
	
	public static void main(String[] args) {
		Point[] p = { 	new Point(100, 100),
						new Point(140, 50),
						new Point(200, 100)
		};
		Triangle t = new Triangle(p);
		Circle c = new Circle(new Point(150, 150), 50);
		t.draw();
		c.draw();

	}

}




#카드 섞기
class Deck{
	final int CARD_NUM =52;
	Card cardArr[] = new Card[CARD_NUM];
	
	Deck(){
		int i=0;
		
		for(int k=Card.KIND_MAX; k>0; k--)
			for(int n=0; n<Card.NUM_MAX;n++)
				cardArr[i++] =new Card(k, n+1);
	}
	Card pick(int index){
		return cardArr[index];
	}
	Card pick(){
		int index = (int)(Math.random() * CARD_NUM);
		return pick(index);
	}
	
	void shuffle(){
		for(int i =0; i<cardArr.length;i++){
			int r =(int)(Math.random() *CARD_NUM);
			
			Card temp = cardArr[i];
			cardArr[i] = cardArr[r];
			cardArr[r]=temp;
		}
	}
}

class Card{
	static final int KIND_MAX =4;
	static final int NUM_MAX=13;
	
	static final int SPASE = 4;
	static final int DIAMOND =3;
	static final int HEART = 2;
	static final int CLOVER = 1;
	
	int kind;
	int number;
	
	Card(){
		this(SPASE, 1);
	}
	Card(int kind, int number){
		this.kind = kind;
		this.number = number;
	}
	public String toString(){
		String[] kinds={"", "CLOVER","HEART", "DIAMOND", "SPASE"};
		String numbers ="0123456789XJQK";
		return "kind:"+kinds[this.kind]+", number:"+numbers.charAt(this.number);
		//charAt은 numbers를 문자값으로 인식(0부터 시작)
	}
}
public class DeckTest {

	public static void main(String[] args) {
		Deck d = new Deck(); //카드 한벌 만들기
		Card c  = d.pick(0); //섞기 전 첫번째 카드 뽑기
		System.out.println(c);
		
		d.shuffle(); //섞기
		c = d.pick(0); //섞은 후 첫번째카드 뽑기
		System.out.println(c);

	}

}
