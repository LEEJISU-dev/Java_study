#구구단 3*3형식으로 출력 - 풀이

		for(int i=1;i<=9;i=i+3){
			System.out.println(i+"단"+"\t" +(i+1)+"단"+"\t"+(i+2)+"단");
			for(int j=1; j<=9; j++){
				System.out.print(i+"*"+j+"="+(i*j));
				System.out.print("\t");
				System.out.print((i+1)+"*"+j+"="+((i+1)*j));
				System.out.print("\t");
				System.out.print((i+2)+"*"+j+"="+((i+2)*j));
				System.out.print("\n");
			}
		}


#배열생성하기
int score[] = new int[500]; //int[] score과 같음


#배열 생성, 값넣기
		int score[] =new int[5];
		int k=1;
		score[0] =50;
		score[1]=60;
		score[k+1]=40;
		score[3]=0;
		score[4]=100;
		
		for(int i=0; i<5; i++){ //i<score.length
			System.out.print(score[i]);
			System.out.print("\t");
		}

#배열 생성과 초기화 동시에하기(동적배열)
int score[] =new int[] {10,30};

int b[][]={{1,2,3},{1,2,3}};



#배열 입력받아 초기값 받기 / 합/평균구하기
		Scanner sc = new Scanner(System.in);
		int i;
		double sum=0.0, avg;
		double num[] =new double[5];
		
		System.out.print("배열의 길이: \n"+ num.length);
		System.out.print("초기화 하지 않은 배열의 값:");
		for(i=0; i<5; i++){
			System.out.print(num[i]+" ");
		}
		System.out.println();
		
		for(i=0; i<5; i++){
			System.out.print("배열의 ["+(i)+"]번째의 데이터입력: ");
			num[i] = sc.nextDouble();
		}
		for(i=0; i<num.length;i++)
			sum = sum+num[i];
		System.out.println("배열의 합은 "+sum);
		avg = sum/num.length;
		System.out.println("배열의 평균값은 "+avg);


#입력받아 최소값 최대값찾아주기
		Scanner sc = new Scanner(System.in);
		int arr[]=new int[5];
		int max =0; //가장 작은값
		int min=100; //가장 큰값
		System.out.println("값을 입력하세요(5개/최대 100)");
		for(int i=0; i<5;i++){
			System.out.println((i+1)+"의 값: ");
			arr[i]= sc.nextInt();
			if(arr[i] > max)
				max = arr[i];
			if(arr[i] < min)
				min = arr[i];
		}
		System.out.println("입력된 값 중 가장 큰 값은 "+max);
		System.out.println("입력된 값 중 가장 작은 값은 "+min);


/*최소값 최대값 입력받은 것을 초기값으로 놓기

		Scanner sc = new Scanner(System.in);
		int arr[]=new int[5];
		int max, min;
		System.out.println("값을 입력하세요(5개/최대 100)");
		for(int i=0; i<5;i++){
			System.out.println((i+1)+"의 값: ");
			arr[i]= sc.nextInt();
		}
			max = arr[0];
			min =arr[0];
			for(int i=1;i<5;i++){
			if(arr[i] < min)
				min = arr[i];
			if(arr[i] > max)
				max = arr[i];
			}
		
		System.out.println("입력된 값 중 가장 큰 값은 "+max);
		System.out.println("입력된 값 중 가장 작은 값은 "+min);*/

#배열 중 찾는 숫자가 잇는지 있다면 몇개가 있는지 
/*		int num[]= new int[10];
		Scanner sc = new Scanner(System.in);
		System.out.println("배열의 값을 입력하세요");
		for(int i=0; i<num.length;i++){
			System.out.print((i+1)+"번째의 값: ");
			num[i]= sc.nextInt();
		}
		System.out.println("===배열===");
		for(int i=0; i<num.length;i++){
			System.out.print("["+num[i]+"] ");
		}
		System.err.println();*/
		int num[]={8,7,3,6,9,8,6,7,4,1,2};
		Scanner sc= new Scanner(System.in);
		System.out.println("찾고싶은 숫자 입력: ");
		int key = sc.nextInt();
		int count = 0;
		for(int i =0; i<num.length; i++){
			if(num[i]==key){
				count++;
				System.out.println((i+1)+"번째 데이터와 일치");
			}
		}
		if(count ==0)
			System.out.println(key+"값은 없습니다");
		else
			System.out.println(key+"값은 "+count+"개 있습니다");
