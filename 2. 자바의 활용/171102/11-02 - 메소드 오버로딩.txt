*반환되는 값의 형을 클래스 이름으로 하면 클래스의 객체를 반환 한다.
Ex)public Box compute(){
	...
	return v_box;
}



class Box11{
	private int iv;
	private double dv;
	
	public Box11(int w, int h, int d){
		volume(w,h,d);
	}
	public Box11(double w, double h, double d){
		volume(w, h,d);
	}
	private void volume(int w, int h, int d){
		iv =w*h*d;
	}
	private void volume(double w, double h, double d){
		dv =w *h*d;
	}
	public int getIv(){
		return iv;
	}
	public double getDv(){
		return dv;
	}
	
}
public class Box11Test {

	public static void main(String[] args) {
		Box11 mb = new Box11(10, 20, 30);
		System.out.println("박스의 부피:"+mb.getIv());
		mb = new Box11(10.5, 20.5, 30.5);
		System.out.println("박스의 부피:"+mb.getDv());
		mb = new Box11(10, 20, 30.5);
		System.out.println("박스의 부피:"+mb.getDv());

	}

}


#배열로 부피 구하기
class Box12{
	private int iv;
	
	public Box12(int w, int h, int d){
		iv =w*h*d;
	}
	public String getIv(){
		return "박스의 부피는 "+iv;
	}
}
public class Box12Test {

	public static void main(String[] args) {
		Box12 mb[] = new Box12[10];
		for(int i=0; i<mb.length;i++){
			mb[i]=new Box12(i*10, i*20, i*30);
		}
		for(Box12 b:mb){//for(int i:mb)int 대신 객체
			System.out.println(b.getIv());
		}

	}

}



#

public class Sample1 {
	 int count = 10;
	 static int num =20;
	 public int sum(int x, int y){
		 return x + y;
	 }
	 static int mul(int x, int y){
		 return x*y;
	 }
	public static void main(String[] args) {
		Sample1 s = new Sample1();
		int same = s.count;
		same = s.num;//==Sample.num
		same = s.sum(5,5);
		same = s.mul(5,5);//==Sample.mul

	}

}



class Overload {
	public void calc() {
		System.out.println("매개변수가 없음");
	}

	public void calc(int w) {
		System.out.println("정사각형의 넓이:" + w * w);
	}

	public void calc(int w, int h) {
		System.out.println("직사각형의 넓이:" + w * h);
	}

	public void calc(int w, int h, int d) {
		System.out.println("직육면체의 넓이:" + w * h * d);
	}
}

public class OverloadTest {

	public static void main(String[] args) {
		Overload ol = new Overload();
		int input[] = new int[args.length];
		for (int i = 0; i < args.length; i++)
			input[i] = Integer.parseInt(args[i]);
		switch (args.length) {
		case 0:
			ol.calc();
			break;
		case 1:
			ol.calc(input[0]);
			break;
		case 2:
			ol.calc(input[0], input[1]);
			break;
		case 3:
			ol.calc(input[0], input[1], input[2]);
			break;
		default:
			System.out.println("인수의 개수가 많습니다");
		}

	}

}





