#키보드로 그림 움직이기 

import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.*;
import javax.imageio.ImageIO;
import javax.swing.*;

class MyCar extends JPanel{
	BufferedImage img = null;
	int img_x = 100;
	int img_y = 100;
	
	public MyCar(){
		try{
			img = ImageIO.read(new File("car.png"));
		}catch(IOException e){
			System.out.println("no image");
			System.exit(1);//불완전 종료 0은 완전 종료
		}
		addKeyListener(new KeyListener() {
			
			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyPressed(KeyEvent e) {
				int keyCode = e.getKeyCode();
				switch(keyCode){
				case KeyEvent.VK_UP:
					img_y -=10;
					break;
				case KeyEvent.VK_DOWN:
					img_y +=10;
					break;
				case KeyEvent.VK_LEFT:
					img_x -=10;
					break;
				case KeyEvent.VK_RIGHT:
					img_x +=10;
					break;
				}
				repaint();//페인트컴퍼런트를 다시 불러옴
				
			}
		});
		
		this.requestFocus();//강제로 포커스 주기(키보트 입력시 반드시 필요)
		this.setFocusable(true);//키 입력을 받을 수 있도록 포커스 강제 지정 
	}
	public void paintComponent(Graphics g){
		super.paintComponent(g);
		g.drawImage(img, img_x, img_y, null);
	}
}
public class CarGame extends JFrame{
	CarGame(){
		this.setSize(500, 500);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		add(new MyCar());
		
		this.setVisible(true);
	}
	public static void main(String[] args) {
		CarGame c = new CarGame();
	}

}




#마우스로 그림 움직이기
import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.*;

class MyCar2 extends JPanel{
	BufferedImage img = null;
	int img_x=0, img_y =0;
	public MyCar2(){
		try{
			img = ImageIO.read(new File("car.png"));
		}catch(IOException e){
			System.out.println("이미지가 없습니다");
			System.exit(1);
		}
		addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {}
			
			@Override
			public void mousePressed(MouseEvent e) {
				img_x = e.getX();
				img_y = e.getY();
				
				repaint();
			}
			
			@Override
			public void mouseExited(MouseEvent e) {}
			
			@Override
			public void mouseEntered(MouseEvent e) {}
			
			@Override
			public void mouseClicked(MouseEvent e) {}
		});
	}
	public void paintComponent(Graphics g){
		super.paintComponent(g);
		g.drawImage(img, img_x, img_y, null);
	}
}
public class CarGame2 extends JFrame{
	CarGame2(){
		setSize(300, 300);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		add(new MyCar2());
		setVisible(true);
	}
	public static void main(String[] args) {
		CarGame2 t = new CarGame2();

	}

}







#마우스로 여러개의 선 그리기
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.awt.event.*;

public class DrawLineMouse extends JFrame{
	public DrawLineMouse() {
		setTitle("마우스로 여러 개의 선 그리기 예제");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setContentPane(new MyPanel());
		setSize(300, 300);
		setVisible(true);
	}

	public static void main(String[] args) {
		new DrawLineMouse();
	}
	class MyPanel extends JPanel{
		Vector<Point> vStart = new Vector<Point>();//객체를 넣을 수 잇는 배열이라고생각
		Vector<Point> vEnd = new Vector<Point>();
		
		public MyPanel(){//listener->인터페이스
			addMouseListener(new MouseAdapter() {//adepter->클래스 (원하는것만상속)
				@Override
				public void mouseReleased(MouseEvent e) {
					Point endP = e.getPoint();
					vEnd.add(endP);
					repaint();
				}
				
				@Override
				public void mousePressed(MouseEvent e) {
					Point startP =e.getPoint();
					vStart.add(startP);		
				}
			});
		}
		public void paintComponent(Graphics g){
			super.paintComponent(g);
			g.setColor(Color.BLUE);
			for(int i=0; i<vStart.size();i++){
				Point s = vStart.elementAt(i);
				Point e = vEnd.elementAt(i);
				g.drawLine((int)s.getX(), (int)s.getY(), (int)e.getX(), (int)e.getY());		
				}
		}
	}

}


